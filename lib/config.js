// Generated by LiveScript 1.2.0
(function(){
  var fs, path, relativeRoot, readJSONSync, mergeDefaults, getConfig;
  fs = require('fs');
  path = require('path');
  relativeRoot = function(it){
    return path.join(__dirname, "/../", it);
  };
  readJSONSync = function(it){
    var e, code;
    try {
      return JSON.parse(fs.readFileSync(relativeRoot(it)));
    } catch (e$) {
      e = e$, code = e.code;
      switch (code) {
      case "ENOENT":
        return {};
      default:
        throw e;
      }
    }
  };
  mergeDefaults = function(a, fallback){
    var that, k, fb, own$ = {}.hasOwnProperty, results$ = {};
    if (Array.isArray(fallback)) {
      if (that = a) {
        that;
      } else {
        fallback;
      }
    }
    if (typeof fallback === "object") {
      for (k in fallback) if (own$.call(fallback, k)) {
        fb = fallback[k];
        results$[k] = a[k] != null ? mergeDefaults(a[k], fb) : fb;
      }
      return results$;
    } else if (a != null) {
      return a;
    } else {
      return fallback;
    }
  };
  getConfig = function(){
    return mergeDefaults(readJSONSync('config.json'), readJSONSync('config.default.json'));
  };
  module.exports = getConfig();
}).call(this);
